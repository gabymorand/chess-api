# Application Configuration
spring.application.name=chess-api
server.port=${PORT:8080}

# Database Configuration - 
spring.datasource.url=${DATABASE_URL:jdbc:postgresql://shortline.proxy.rlwy.net:27864/railway}
spring.datasource.username=${DATABASE_USERNAME:postgres}
spring.datasource.password=${DATABASE_PASSWORD:dUfKlLkQqvWyhjIdIMkSADpvrANOojIv}
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA/Hibernate Configuration 
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.properties.hibernate.jdbc.batch_size=20
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true

# Connection Pool Configuration - OPTIMISÃ‰
spring.datasource.hikari.maximum-pool-size=5
spring.datasource.hikari.minimum-idle=2
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.max-lifetime=1200000

# Server Optimization
server.tomcat.max-threads=50
server.tomcat.min-spare-threads=10

# JWT Configuration
jwt.secret=${JWT_SECRET:404E635266556A586E3272357538782F413F4428472B4B6250645367566B5970}
jwt.expiration=${JWT_EXPIRATION:86400000}

# Swagger/OpenAPI Configuration
springdoc.api-docs.path=/v3/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.enabled=true

# Mistral AI Configuration
mistral.api.key=${MISTRAL_API_KEY:l3WguwUpqE0xYijOoNq6LzxqtlFhEAnv}
mistral.api.url=${MISTRAL_API_URL:https://api.mistral.ai/v1}
mistral.model=${MISTRAL_MODEL:mistral-small}

# Logging Configuration 
logging.level.com.chesslearning.chess_api=INFO
logging.level.org.springframework.web=WARN
logging.level.org.hibernate.SQL=WARN
logging.level.org.springframework.security=WARN
logging.level.reactor.netty=WARN