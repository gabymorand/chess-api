{
    "info": {
        "name": "‚ôüÔ∏è Chess API - Collection CORRIG√âE v2",
        "description": "Collection qui fonctionne avec votre MistralController.java",
        "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
        {
            "name": "üîë √âTAPE 1 - Login Gabriel",
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test('‚úÖ Login successful', function () {",
                            "    pm.response.to.have.status(200);",
                            "});",
                            "",
                            "if (pm.response.code === 200) {",
                            "    const responseJson = pm.response.json();",
                            "    if (responseJson.token) {",
                            "        pm.collectionVariables.set('authToken', responseJson.token);",
                            "        console.log('üîë TOKEN SAUVEGARD√â:', responseJson.token.substring(0, 30) + '...');",
                            "        console.log('‚úÖ Pr√™t pour tester les autres endpoints !');",
                            "    }",
                            "    if (responseJson.user) {",
                            "        pm.collectionVariables.set('userId', responseJson.user.id);",
                            "        console.log('üë§ User ID:', responseJson.user.id);",
                            "    }",
                            "}"
                        ]
                    }
                }
            ],
            "request": {
                "method": "POST",
                "header": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "body": {
                    "mode": "raw",
                    "raw": "{\n  \"username\": \"Gabriel\",\n  \"password\": \"Gabriel\"\n}"
                },
                "url": {
                    "raw": "{{baseUrl}}/api/auth/login",
                    "host": ["{{baseUrl}}"],
                    "path": ["api", "auth", "login"]
                }
            }
        },
        {
            "name": "ü§ñ √âTAPE 2 - AI Health Check",
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test('‚úÖ AI Health OK', function () {",
                            "    pm.response.to.have.status(200);",
                            "});",
                            "",
                            "if (pm.response.code === 200) {",
                            "    console.log('üîç AI Health Response:', pm.response.text());",
                            "}"
                        ]
                    }
                }
            ],
            "request": {
                "method": "GET",
                "header": [
                    {
                        "key": "Authorization",
                        "value": "Bearer {{authToken}}"
                    }
                ],
                "url": {
                    "raw": "{{baseUrl}}/api/ai/health",
                    "host": ["{{baseUrl}}"],
                    "path": ["api", "ai", "health"]
                }
            }
        },
        {
            "name": "ü§ñ √âTAPE 3 - Chat with AI",
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test('‚úÖ Chat AI successful', function () {",
                            "    pm.response.to.have.status(200);",
                            "});",
                            "",
                            "if (pm.response.code === 200) {",
                            "    const response = pm.response.json();",
                            "    // ‚úÖ CORRIG√â : Utilise 'analysis' au lieu de 'response'",
                            "    if (response && response.analysis) {",
                            "        console.log('üí¨ AI Response:', response.analysis.substring(0, 100) + '...');",
                            "    } else {",
                            "        console.log('üí¨ AI Response:', JSON.stringify(response, null, 2));",
                            "    }",
                            "}"
                        ]
                    }
                }
            ],
            "request": {
                "method": "POST",
                "header": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer {{authToken}}"
                    }
                ],
                "body": {
                    "mode": "raw",
                    "raw": "{\n  \"message\": \"Peux-tu m'expliquer la d√©fense fran√ßaise aux √©checs ?\"\n}"
                },
                "url": {
                    "raw": "{{baseUrl}}/api/ai/chat",
                    "host": ["{{baseUrl}}"],
                    "path": ["api", "ai", "chat"]
                }
            }
        },
        {
            "name": "üéØ √âTAPE 4 - Chess Quiz",
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test('‚úÖ Quiz generated', function () {",
                            "    pm.response.to.have.status(200);",
                            "});",
                            "",
                            "if (pm.response.code === 200) {",
                            "    const response = pm.response.json();",
                            "    // ‚úÖ CORRIG√â : Utilise 'analysis' au lieu de 'response'",
                            "    if (response && response.analysis) {",
                            "        console.log('üéØ Quiz Response:', response.analysis.substring(0, 100) + '...');",
                            "    } else {",
                            "        console.log('üéØ Quiz Response:', JSON.stringify(response, null, 2));",
                            "    }",
                            "}"
                        ]
                    }
                }
            ],
            "request": {
                "method": "GET",
                "header": [
                    {
                        "key": "Authorization",
                        "value": "Bearer {{authToken}}"
                    }
                ],
                "url": {
                    "raw": "{{baseUrl}}/api/ai/quiz?difficulty=beginner",
                    "host": ["{{baseUrl}}"],
                    "path": ["api", "ai", "quiz"],
                    "query": [
                        {
                            "key": "difficulty",
                            "value": "beginner"
                        }
                    ]
                }
            }
        },
        {
            "name": "üí° √âTAPE 5 - Improvement Tips",
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test('‚úÖ Tips generated', function () {",
                            "    pm.response.to.have.status(200);",
                            "});",
                            "",
                            "if (pm.response.code === 200) {",
                            "    const response = pm.response.json();",
                            "    // ‚úÖ CORRIG√â : Utilise 'analysis' au lieu de 'response'",
                            "    if (response && response.analysis) {",
                            "        console.log('üí° Tips Response:', response.analysis.substring(0, 100) + '...');",
                            "    } else {",
                            "        console.log('üí° Tips Response:', JSON.stringify(response, null, 2));",
                            "    }",
                            "}"
                        ]
                    }
                }
            ],
            "request": {
                "method": "POST",
                "header": [
                    {
                        "key": "Authorization",
                        "value": "Bearer {{authToken}}"
                    }
                ],
                "url": {
                    "raw": "{{baseUrl}}/api/ai/tips/improvement?stats=Parties jou√©es: 30, Victoires: 12, D√©faites: 15, ELO: 1150. Probl√®mes: perte de mat√©riel fr√©quente.",
                    "host": ["{{baseUrl}}"],
                    "path": ["api", "ai", "tips", "improvement"],
                    "query": [
                        {
                            "key": "stats",
                            "value": "Parties jou√©es: 30, Victoires: 12, D√©faites: 15, ELO: 1150. Probl√®mes: perte de mat√©riel fr√©quente."
                        }
                    ]
                }
            }
        },
        {
            "name": "üîç √âTAPE 6 - Explain Move",
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test('‚úÖ Move explained', function () {",
                            "    pm.response.to.have.status(200);",
                            "});",
                            "",
                            "if (pm.response.code === 200) {",
                            "    const response = pm.response.json();",
                            "    // ‚úÖ CORRIG√â : Utilise 'analysis' au lieu de 'response'",
                            "    if (response && response.analysis) {",
                            "        console.log('üîç Explanation:', response.analysis.substring(0, 100) + '...');",
                            "    } else {",
                            "        console.log('üîç Explanation:', JSON.stringify(response, null, 2));",
                            "    }",
                            "}"
                        ]
                    }
                }
            ],
            "request": {
                "method": "POST",
                "header": [
                    {
                        "key": "Authorization",
                        "value": "Bearer {{authToken}}"
                    }
                ],
                "url": {
                    "raw": "{{baseUrl}}/api/ai/explain/move?move=e4&position=rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1",
                    "host": ["{{baseUrl}}"],
                    "path": ["api", "ai", "explain", "move"],
                    "query": [
                        {
                            "key": "move",
                            "value": "e4"
                        },
                        {
                            "key": "position",
                            "value": "rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1"
                        }
                    ]
                }
            }
        },
        {
            "name": "üë§ √âTAPE 7 - My Profile",
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test('‚úÖ Profile retrieved', function () {",
                            "    pm.response.to.have.status(200);",
                            "});",
                            "",
                            "if (pm.response.code === 200) {",
                            "    const response = pm.response.json();",
                            "    console.log('üë§ Profile:', JSON.stringify(response, null, 2));",
                            "}"
                        ]
                    }
                }
            ],
            "request": {
                "method": "GET",
                "header": [
                    {
                        "key": "Authorization",
                        "value": "Bearer {{authToken}}"
                    }
                ],
                "url": {
                    "raw": "{{baseUrl}}/api/users/me",
                    "host": ["{{baseUrl}}"],
                    "path": ["api", "users", "me"]
                }
            }
        },
        {
            "name": "‚ôüÔ∏è √âTAPE 8 - Create Game",
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test('‚úÖ Game created', function () {",
                            "    pm.response.to.have.status(201);",
                            "});",
                            "",
                            "if (pm.response.code === 201) {",
                            "    const response = pm.response.json();",
                            "    pm.collectionVariables.set('gameId', response.id);",
                            "    console.log('‚ôüÔ∏è Game created with ID:', response.id);",
                            "}"
                        ]
                    }
                }
            ],
            "request": {
                "method": "POST",
                "header": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer {{authToken}}"
                    }
                ],
                "body": {
                    "mode": "raw",
                    "raw": "{\n  \"whitePlayerId\": {{userId}},\n  \"blackPlayerId\": null,\n  \"gameType\": \"CASUAL\"\n}"
                },
                "url": {
                    "raw": "{{baseUrl}}/api/games",
                    "host": ["{{baseUrl}}"],
                    "path": ["api", "games"]
                }
            }
        },
        {
            "name": "üéØ √âTAPE 9 - Play Move",
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test('‚úÖ Move played', function () {",
                            "    pm.response.to.have.status(201);",
                            "});",
                            "",
                            "if (pm.response.code === 201) {",
                            "    const response = pm.response.json();",
                            "    console.log('üéØ Move played:', JSON.stringify(response, null, 2));",
                            "}"
                        ]
                    }
                }
            ],
            "request": {
                "method": "POST",
                "header": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Authorization",
                        "value": "Bearer {{authToken}}"
                    }
                ],
                "body": {
                    "mode": "raw",
                    "raw": "{\n  \"gameId\": {{gameId}},\n  \"move\": \"e4\",\n  \"moveNotation\": \"e2-e4\"\n}"
                },
                "url": {
                    "raw": "{{baseUrl}}/api/moves",
                    "host": ["{{baseUrl}}"],
                    "path": ["api", "moves"]
                }
            }
        },
        {
            "name": "üîç √âTAPE 10 - Analyze Game",
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test('‚úÖ Game analyzed', function () {",
                            "    pm.response.to.have.status(200);",
                            "});",
                            "",
                            "if (pm.response.code === 200) {",
                            "    const response = pm.response.json();",
                            "    // ‚úÖ CORRIG√â : Utilise 'analysis' au lieu de 'response'",
                            "    if (response && response.analysis) {",
                            "        console.log('üîç Analysis:', response.analysis.substring(0, 100) + '...');",
                            "    } else {",
                            "        console.log('üîç Analysis:', JSON.stringify(response, null, 2));",
                            "    }",
                            "}"
                        ]
                    }
                }
            ],
            "request": {
                "method": "GET",
                "header": [
                    {
                        "key": "Authorization",
                        "value": "Bearer {{authToken}}"
                    }
                ],
                "url": {
                    "raw": "{{baseUrl}}/api/ai/analyze/game/{{gameId}}",
                    "host": ["{{baseUrl}}"],
                    "path": ["api", "ai", "analyze", "game", "{{gameId}}"]
                }
            }
        }
    ],
    "variable": [
        {
            "key": "baseUrl",
            "value": "https://chess-api.up.railway.app",
            "type": "string"
        },
        {
            "key": "authToken",
            "value": "",
            "type": "string"
        },
        {
            "key": "userId",
            "value": "",
            "type": "string"
        },
        {
            "key": "gameId",
            "value": "1",
            "type": "string"
        }
    ]
}